import static org.junit.Assert.*;

import org.junit.Test;

import command_n_conquer.Buffer.StoppException;
import model.Material;
import model.Product;

public class partsListTester {

	@Test
	public void test() throws Exception {
		Product p1 = Product.create("Stuhl", 100);
		Material m1 =  Material.create("Holz", 5);
		Material m2 =  Material.create("Nägel", 1);
		
		p1.addPart(m1, 4);
		p1.addPart(m2, 8);
		
		assertEquals(128,p1.getOverallPrice());
	}
	
	@Test
	public void test2(){
		Product p2 = Product.create("Sessel", 50);
		Product p1 = Product.create("Stuhl", 100);
		Material m1 =  Material.create("Holz", 5);
		Material m2 =  Material.create("Nägel", 1);
		Material m3 = Material.create("Stoff", 10);
		
		try {
			p1.addPart(m1, 4);
			p1.addPart(m2, 8);
			p2.addPart(p1, 1);
			p2.addPart(m3, 6);
		} catch (Exception e) {
			e.printStackTrace();
		}
		assertEquals(128, p1.getOverallPrice());
		assertEquals(238, p2.getOverallPrice());
	}
	
	/**
	 * <marquee>Blabla</marquee>
	 * @throws StoppException
	 * @throws Throwable
	 */
	@Test
	public void parallelTest() throws StoppException, Throwable{
		Product p2 = Product.create("Sofa", 50);
		Product p1 = Product.create("Stuhl", 100);
		Material m1 =  Material.create("Holz", 5);
		Material m2 =  Material.create("Nägel", 1);
		Material m3 = Material.create("Stoff", 10);
		
		try {
			p1.addPart(m1, 4);
			p1.addPart(m2, 8);
			p2.addPart(p1, 2);
			p2.addPart(m3, 14);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertEquals(446, p2.getOverallPriceParallel());
	}
	
	@Test
	public void parallelMassTest() throws StoppException, Throwable {
		Product p0 = Product.create("BIGGEST PRODUCT EVER", 1);
		Product p1 = Product.create("P1",  50);
		Product p2 = Product.create("P2",  22);
		Product p3 = Product.create("P3",  40);
		Product p4 = Product.create("P4",  78);
		Product p5 = Product.create("P5",  88);
		Product p6 = Product.create("P6",  99);
		Product p7 = Product.create("P7",  23);
		Product p8 = Product.create("P8",  95);
		Product p9 = Product.create("P9",  47);
		Product p10 = Product.create("P10",  43);
		
		p0.addPart(p1, 1);
		p0.addPart(p2, 1);
		p0.addPart(p3, 1);
		p0.addPart(p4, 1);
		p0.addPart(p5, 1);
		p0.addPart(p6, 1);
		p0.addPart(p7, 1);
		p0.addPart(p8, 1);
		p0.addPart(p9, 1);
		p0.addPart(p10, 1);

		Material m1 = Material.create("M1",  23);
		Material m2 = Material.create("M2",  85);
		Material m3 = Material.create("M3",  62);
		Material m4 = Material.create("M4",  37);
		Material m5 = Material.create("M5",  69);
		Material m6 = Material.create("M6",  19);
		Material m7 = Material.create("M7",  53);
		Material m8 = Material.create("M8",  96);
		Material m9 = Material.create("M9",  93);
		Material m10 = Material.create("M10",  73);
		Material m11 = Material.create("M11",  49);
		Material m12 = Material.create("M12",  75);
		Material m13 = Material.create("M13",  83);
		Material m14 = Material.create("M14",  75);
		Material m15 = Material.create("M15",  39);
		Material m16 = Material.create("M16",  61);
		Material m17 = Material.create("M17",  14);
		Material m18 = Material.create("M18",  47);
		Material m19 = Material.create("M19",  5);
		Material m20 = Material.create("M20",  32);
		Material m21 = Material.create("M21",  40);
		Material m22 = Material.create("M22",  66);
		Material m23 = Material.create("M23",  34);
		Material m24 = Material.create("M24",  56);
		Material m25 = Material.create("M25",  38);
		Material m26 = Material.create("M26",  9);
		Material m27 = Material.create("M27",  92);
		Material m28 = Material.create("M28",  12);
		Material m29 = Material.create("M29",  60);
		Material m30 = Material.create("M30",  6);
		Material m31 = Material.create("M31",  69);
		Material m32 = Material.create("M32",  97);
		Material m33 = Material.create("M33",  62);
		Material m34 = Material.create("M34",  55);
		Material m35 = Material.create("M35",  70);
		Material m36 = Material.create("M36",  67);
		Material m37 = Material.create("M37",  86);
		Material m38 = Material.create("M38",  89);
		Material m39 = Material.create("M39",  15);
		Material m40 = Material.create("M40",  67);
		
		p1.addPart(m1, 4);
		p2.addPart(m1, 8);
		p3.addPart(m1, 7);
		p4.addPart(m1, 9);
		p5.addPart(m1, 10);
		p6.addPart(m1, 4);
		p7.addPart(m1, 9);
		p8.addPart(m1, 7);
		p9.addPart(m1, 2);
		p10.addPart(m1, 7);
		p1.addPart(m2, 4);
		p2.addPart(m2, 10);
		p3.addPart(m2, 5);
		p4.addPart(m2, 10);
		p5.addPart(m2, 10);
		p6.addPart(m2, 6);
		p7.addPart(m2, 3);
		p8.addPart(m2, 4);
		p9.addPart(m2, 3);
		p10.addPart(m2, 4);
		p1.addPart(m3, 10);
		p2.addPart(m3, 9);
		p3.addPart(m3, 7);
		p4.addPart(m3, 1);
		p5.addPart(m3, 4);
		p6.addPart(m3, 9);
		p7.addPart(m3, 10);
		p8.addPart(m3, 10);
		p9.addPart(m3, 2);
		p10.addPart(m3, 4);
		p1.addPart(m4, 6);
		p2.addPart(m4, 8);
		p3.addPart(m4, 3);
		p4.addPart(m4, 4);
		p5.addPart(m4, 3);
		p6.addPart(m4, 3);
		p7.addPart(m4, 2);
		p8.addPart(m4, 4);
		p9.addPart(m4, 5);
		p10.addPart(m4, 6);
		p1.addPart(m5, 7);
		p2.addPart(m5, 8);
		p3.addPart(m5, 10);
		p4.addPart(m5, 8);
		p5.addPart(m5, 3);
		p6.addPart(m5, 4);
		p7.addPart(m5, 9);
		p8.addPart(m5, 8);
		p9.addPart(m5, 7);
		p10.addPart(m5, 4);
		p1.addPart(m6, 3);
		p2.addPart(m6, 9);
		p3.addPart(m6, 10);
		p4.addPart(m6, 8);
		p5.addPart(m6, 4);
		p6.addPart(m6, 8);
		p7.addPart(m6, 5);
		p8.addPart(m6, 6);
		p9.addPart(m6, 6);
		p10.addPart(m6, 3);
		p1.addPart(m7, 6);
		p2.addPart(m7, 3);
		p3.addPart(m7, 5);
		p4.addPart(m7, 5);
		p5.addPart(m7, 10);
		p6.addPart(m7, 8);
		p7.addPart(m7, 1);
		p8.addPart(m7, 6);
		p9.addPart(m7, 5);
		p10.addPart(m7, 4);
		p1.addPart(m8, 10);
		p2.addPart(m8, 7);
		p3.addPart(m8, 8);
		p4.addPart(m8, 8);
		p5.addPart(m8, 7);
		p6.addPart(m8, 3);
		p7.addPart(m8, 6);
		p8.addPart(m8, 5);
		p9.addPart(m8, 9);
		p10.addPart(m8, 8);
		p1.addPart(m9, 10);
		p2.addPart(m9, 4);
		p3.addPart(m9, 10);
		p4.addPart(m9, 3);
		p5.addPart(m9, 7);
		p6.addPart(m9, 7);
		p7.addPart(m9, 4);
		p8.addPart(m9, 6);
		p9.addPart(m9, 9);
		p10.addPart(m9, 7);
		p1.addPart(m10, 9);
		p2.addPart(m10, 2);
		p3.addPart(m10, 4);
		p4.addPart(m10, 5);
		p5.addPart(m10, 9);
		p6.addPart(m10, 9);
		p7.addPart(m10, 10);
		p8.addPart(m10, 3);
		p9.addPart(m10, 2);
		p10.addPart(m10, 8);
		p1.addPart(m11, 7);
		p2.addPart(m11, 8);
		p3.addPart(m11, 8);
		p4.addPart(m11, 2);
		p5.addPart(m11, 2);
		p6.addPart(m11, 10);
		p7.addPart(m11, 5);
		p8.addPart(m11, 9);
		p9.addPart(m11, 6);
		p10.addPart(m11, 2);
		p1.addPart(m12, 8);
		p2.addPart(m12, 2);
		p3.addPart(m12, 10);
		p4.addPart(m12, 5);
		p5.addPart(m12, 7);
		p6.addPart(m12, 8);
		p7.addPart(m12, 4);
		p8.addPart(m12, 7);
		p9.addPart(m12, 6);
		p10.addPart(m12, 10);
		p1.addPart(m13, 7);
		p2.addPart(m13, 8);
		p3.addPart(m13, 3);
		p4.addPart(m13, 2);
		p5.addPart(m13, 10);
		p6.addPart(m13, 2);
		p7.addPart(m13, 7);
		p8.addPart(m13, 8);
		p9.addPart(m13, 7);
		p10.addPart(m13, 4);
		p1.addPart(m14, 5);
		p2.addPart(m14, 10);
		p3.addPart(m14, 5);
		p4.addPart(m14, 2);
		p5.addPart(m14, 8);
		p6.addPart(m14, 9);
		p7.addPart(m14, 2);
		p8.addPart(m14, 6);
		p9.addPart(m14, 8);
		p10.addPart(m14, 10);
		p1.addPart(m15, 1);
		p2.addPart(m15, 5);
		p3.addPart(m15, 7);
		p4.addPart(m15, 6);
		p5.addPart(m15, 9);
		p6.addPart(m15, 7);
		p7.addPart(m15, 3);
		p8.addPart(m15, 3);
		p9.addPart(m15, 6);
		p10.addPart(m15, 2);
		p1.addPart(m16, 3);
		p2.addPart(m16, 6);
		p3.addPart(m16, 9);
		p4.addPart(m16, 8);
		p5.addPart(m16, 5);
		p6.addPart(m16, 1);
		p7.addPart(m16, 8);
		p8.addPart(m16, 9);
		p9.addPart(m16, 2);
		p10.addPart(m16, 1);
		p1.addPart(m17, 3);
		p2.addPart(m17, 4);
		p3.addPart(m17, 5);
		p4.addPart(m17, 5);
		p5.addPart(m17, 3);
		p6.addPart(m17, 3);
		p7.addPart(m17, 5);
		p8.addPart(m17, 5);
		p9.addPart(m17, 10);
		p10.addPart(m17, 1);
		p1.addPart(m18, 5);
		p2.addPart(m18, 3);
		p3.addPart(m18, 9);
		p4.addPart(m18, 1);
		p5.addPart(m18, 10);
		p6.addPart(m18, 4);
		p7.addPart(m18, 7);
		p8.addPart(m18, 5);
		p9.addPart(m18, 3);
		p10.addPart(m18, 9);
		p1.addPart(m19, 5);
		p2.addPart(m19, 5);
		p3.addPart(m19, 1);
		p4.addPart(m19, 4);
		p5.addPart(m19, 6);
		p6.addPart(m19, 2);
		p7.addPart(m19, 2);
		p8.addPart(m19, 2);
		p9.addPart(m19, 1);
		p10.addPart(m19, 3);
		p1.addPart(m20, 10);
		p2.addPart(m20, 8);
		p3.addPart(m20, 2);
		p4.addPart(m20, 1);
		p5.addPart(m20, 2);
		p6.addPart(m20, 10);
		p7.addPart(m20, 9);
		p8.addPart(m20, 2);
		p9.addPart(m20, 10);
		p10.addPart(m20, 3);
		p1.addPart(m21, 1);
		p2.addPart(m21, 4);
		p3.addPart(m21, 5);
		p4.addPart(m21, 1);
		p5.addPart(m21, 10);
		p6.addPart(m21, 4);
		p7.addPart(m21, 5);
		p8.addPart(m21, 5);
		p9.addPart(m21, 4);
		p10.addPart(m21, 6);
		p1.addPart(m22, 1);
		p2.addPart(m22, 3);
		p3.addPart(m22, 1);
		p4.addPart(m22, 5);
		p5.addPart(m22, 7);
		p6.addPart(m22, 6);
		p7.addPart(m22, 5);
		p8.addPart(m22, 8);
		p9.addPart(m22, 1);
		p10.addPart(m22, 4);
		p1.addPart(m23, 7);
		p2.addPart(m23, 2);
		p3.addPart(m23, 2);
		p4.addPart(m23, 7);
		p5.addPart(m23, 4);
		p6.addPart(m23, 9);
		p7.addPart(m23, 7);
		p8.addPart(m23, 3);
		p9.addPart(m23, 6);
		p10.addPart(m23, 8);
		p1.addPart(m24, 4);
		p2.addPart(m24, 3);
		p3.addPart(m24, 4);
		p4.addPart(m24, 3);
		p5.addPart(m24, 2);
		p6.addPart(m24, 3);
		p7.addPart(m24, 9);
		p8.addPart(m24, 3);
		p9.addPart(m24, 2);
		p10.addPart(m24, 4);
		p1.addPart(m25, 8);
		p2.addPart(m25, 2);
		p3.addPart(m25, 6);
		p4.addPart(m25, 3);
		p5.addPart(m25, 6);
		p6.addPart(m25, 8);
		p7.addPart(m25, 3);
		p8.addPart(m25, 9);
		p9.addPart(m25, 6);
		p10.addPart(m25, 8);
		p1.addPart(m26, 3);
		p2.addPart(m26, 2);
		p3.addPart(m26, 5);
		p4.addPart(m26, 3);
		p5.addPart(m26, 4);
		p6.addPart(m26, 1);
		p7.addPart(m26, 3);
		p8.addPart(m26, 9);
		p9.addPart(m26, 3);
		p10.addPart(m26, 4);
		p1.addPart(m27, 7);
		p2.addPart(m27, 5);
		p3.addPart(m27, 9);
		p4.addPart(m27, 8);
		p5.addPart(m27, 7);
		p6.addPart(m27, 8);
		p7.addPart(m27, 10);
		p8.addPart(m27, 9);
		p9.addPart(m27, 1);
		p10.addPart(m27, 6);
		p1.addPart(m28, 3);
		p2.addPart(m28, 7);
		p3.addPart(m28, 10);
		p4.addPart(m28, 10);
		p5.addPart(m28, 3);
		p6.addPart(m28, 5);
		p7.addPart(m28, 6);
		p8.addPart(m28, 10);
		p9.addPart(m28, 5);
		p10.addPart(m28, 9);
		p1.addPart(m29, 9);
		p2.addPart(m29, 5);
		p3.addPart(m29, 10);
		p4.addPart(m29, 10);
		p5.addPart(m29, 7);
		p6.addPart(m29, 3);
		p7.addPart(m29, 3);
		p8.addPart(m29, 9);
		p9.addPart(m29, 7);
		p10.addPart(m29, 1);
		p1.addPart(m30, 7);
		p2.addPart(m30, 9);
		p3.addPart(m30, 8);
		p4.addPart(m30, 5);
		p5.addPart(m30, 2);
		p6.addPart(m30, 5);
		p7.addPart(m30, 7);
		p8.addPart(m30, 6);
		p9.addPart(m30, 3);
		p10.addPart(m30, 9);
		p1.addPart(m31, 4);
		p2.addPart(m31, 5);
		p3.addPart(m31, 7);
		p4.addPart(m31, 1);
		p5.addPart(m31, 3);
		p6.addPart(m31, 2);
		p7.addPart(m31, 9);
		p8.addPart(m31, 1);
		p9.addPart(m31, 2);
		p10.addPart(m31, 9);
		p1.addPart(m32, 10);
		p2.addPart(m32, 9);
		p3.addPart(m32, 5);
		p4.addPart(m32, 9);
		p5.addPart(m32, 2);
		p6.addPart(m32, 10);
		p7.addPart(m32, 5);
		p8.addPart(m32, 3);
		p9.addPart(m32, 2);
		p10.addPart(m32, 9);
		p1.addPart(m33, 5);
		p2.addPart(m33, 8);
		p3.addPart(m33, 8);
		p4.addPart(m33, 8);
		p5.addPart(m33, 2);
		p6.addPart(m33, 8);
		p7.addPart(m33, 10);
		p8.addPart(m33, 3);
		p9.addPart(m33, 4);
		p10.addPart(m33, 9);
		p1.addPart(m34, 6);
		p2.addPart(m34, 5);
		p3.addPart(m34, 9);
		p4.addPart(m34, 4);
		p5.addPart(m34, 7);
		p6.addPart(m34, 3);
		p7.addPart(m34, 10);
		p8.addPart(m34, 2);
		p9.addPart(m34, 2);
		p10.addPart(m34, 4);
		p1.addPart(m35, 2);
		p2.addPart(m35, 9);
		p3.addPart(m35, 1);
		p4.addPart(m35, 3);
		p5.addPart(m35, 3);
		p6.addPart(m35, 9);
		p7.addPart(m35, 3);
		p8.addPart(m35, 10);
		p9.addPart(m35, 3);
		p10.addPart(m35, 10);
		p1.addPart(m36, 7);
		p2.addPart(m36, 9);
		p3.addPart(m36, 4);
		p4.addPart(m36, 5);
		p5.addPart(m36, 2);
		p6.addPart(m36, 10);
		p7.addPart(m36, 1);
		p8.addPart(m36, 8);
		p9.addPart(m36, 5);
		p10.addPart(m36, 3);
		p1.addPart(m37, 10);
		p2.addPart(m37, 1);
		p3.addPart(m37, 5);
		p4.addPart(m37, 7);
		p5.addPart(m37, 6);
		p6.addPart(m37, 3);
		p7.addPart(m37, 1);
		p8.addPart(m37, 2);
		p9.addPart(m37, 7);
		p10.addPart(m37, 7);
		p1.addPart(m38, 10);
		p2.addPart(m38, 6);
		p3.addPart(m38, 6);
		p4.addPart(m38, 3);
		p5.addPart(m38, 10);
		p6.addPart(m38, 4);
		p7.addPart(m38, 8);
		p8.addPart(m38, 9);
		p9.addPart(m38, 3);
		p10.addPart(m38, 1);
		p1.addPart(m39, 8);
		p2.addPart(m39, 6);
		p3.addPart(m39, 5);
		p4.addPart(m39, 9);
		p5.addPart(m39, 3);
		p6.addPart(m39, 2);
		p7.addPart(m39, 2);
		p8.addPart(m39, 4);
		p9.addPart(m39, 9);
		p10.addPart(m39, 1);
		p1.addPart(m40, 7);
		p2.addPart(m40, 1);
		p3.addPart(m40, 7);
		p4.addPart(m40, 9);
		p5.addPart(m40, 7);
		p6.addPart(m40, 7);
		p7.addPart(m40, 3);
		p8.addPart(m40, 6);
		p9.addPart(m40, 5);
		
		
		long oldseq = System.currentTimeMillis() % 1000;
		int seq = p0.getOverallPrice();
		long durationseq = (System.currentTimeMillis() % 1000) - oldseq;
		System.out.println("Sequential Operation took " + durationseq + "ms");
		
		long old = System.currentTimeMillis() % 1000;
		int para = p0.getOverallPriceParallel();
		long duration = (System.currentTimeMillis() % 1000) - old;
		System.out.println("Parallel Operation took " + duration + "ms");
		
		assertEquals(para, seq);
	}
	

}
